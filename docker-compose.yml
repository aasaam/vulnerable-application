version: '3'

services:

  php:
    build:
      context: .
      dockerfile: config/php/Dockerfile
    restart: unless-stopped
    working_dir: /app/php
    volumes:
      - ./app/php:/app/php:ro
      - ./config/php/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      SA_PASSWORD: ${SA_PASSWORD}
    networks:
      - app-network

  adminer:
    image: adminer
    ports:
      - 21901:8080
    networks:
      - app-network

  nginx:
    image: nginx:1
    restart: unless-stopped
    volumes:
      - ./app/php:/app/php:ro
      - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "21900:80"
    networks:
      - app-network

  mysql:
    image: mysql:5
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - app-network

  postgres:
    image: postgres:9
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - app-network

  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    restart: unless-stopped
    environment:
      ACCEPT_EULA: 'Y'
      SA_PASSWORD: ${SA_PASSWORD}
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
